server.port=30001
server.tomcat.threads.max=${SERVER_MAX_THREADS:400}
management.endpoints.web.exposure.include=*

# banco de testes
spring.datasource.platform=h2
spring.datasource.driverClassName=org.h2.Driver
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.properties.hibernate.default_schema=user_db
spring.jpa.hibernate.ddl-auto=create-drop
spring.h2.console.enabled=true
spring.h2.console.path=/h2

# DataSource para testes
spring.datasource.url=jdbc:h2:mem:user_db;DB_CLOSE_ON_EXIT=FALSE;MODE=PostgreSQL;INIT=CREATE SCHEMA IF NOT EXISTS user_db
spring.datasource.username=sa
spring.datasource.password=sa
spring.jpa.show-sql=true

# configurações do pool do banco
spring.datasource.hikari.connectionTimeout=${DB_CONN_TIMEOUT:1000}
spring.datasource.hikari.validationTimeout=${DB_VALIDATION_TIMEOUT:1000}
spring.datasource.hikari.maxLifetime=${DB_MAX_LIFE_TIME:1800000}
spring.datasource.hikari.leakDetectionThreshold=5
spring.datasource.hikari.connectionTestQuery=select 1
spring.datasource.hikari.maximumPoolSize=${DB_POOL_SIZE:3}

# rabbit
spring.rabbitmq.host=${RABBIT_HOST:localhost}
spring.rabbitmq.password=pass
spring.rabbitmq.username=user
spring.rabbitmq.port=5672
spring.rabbitmq.virtual-host=sample-vh
spring.rabbitmq.listener.simple.concurrency=5
spring.rabbitmq.listener.simple.max-concurrency=10
spring.rabbitmq.listener.simple.retry.enabled=true
spring.rabbitmq.listener.simple.retry.initial-interval=3s
spring.rabbitmq.listener.simple.retry.max-attempts=1000
spring.rabbitmq.listener.simple.retry.max-interval=20s
spring.rabbitmq.listener.simple.retry.multiplier=2
          
          
          
